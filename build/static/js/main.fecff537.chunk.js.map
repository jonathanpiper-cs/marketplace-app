{"version":3,"sources":["common/contexts/customFieldExtensionContext.ts","reportWebVitals.ts","components/ErrorBoundary.tsx","components/AppFailed.tsx","common/contexts/marketplaceContext.ts","common/providers/MarketplaceAppProvider.tsx","common/hooks/useAppLocation.ts","common/hooks/useAppSdk.tsx","common/contexts/entrySidebarExtensionContext.ts","common/providers/EntrySidebarExtensionProvider.tsx","common/contexts/appConfigurationExtensionContext.ts","common/providers/AppConfigurationExtensionProvider.tsx","common/providers/CustomFieldExtensionProvider.tsx","containers/App/App.tsx","index.tsx"],"names":["CustomFieldExtensionContext","React","createContext","customField","setFieldData","loading","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ErrorBoundary","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","hasError","_createClass","key","value","error","errorInfo","ENV","this","_jsx","children","Component","AppFailed","className","_jsxs","role","fill","viewBox","xmlns","fillRule","d","clipRule","type","MarketplaceAppContext","appSdk","appConfig","MarketplaceAppProvider","process","REACT_APP_MARKETPLACE_APP_NAME","_useState","useState","_useState2","_slicedToArray","failed","setFailed","_useState3","_useState4","setAppSdk","_useState5","_useState6","setConfig","useEffect","ContentstackAppSDK","init","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","getConfig","sent","stop","_x","apply","arguments","catch","isNull","Provider","useAppLocation","useContext","locations","useMemo","keys","location","_useMemo","locationName","i","length","isEmpty","get","concat","undefined","EntrySidebarExtensionContext","entryData","EntrySidebarExtensionProvider","setEntry","setLoading","entry","abrupt","getData","AppConfigurationExtensionContext","installationData","configuration","serverConfiguration","setInstallationData","AppConfigurationExtensionProvider","setInstallation","installation","getInstallationData","data","err","console","useCallback","newInstallationData","_objectSpread","CustomFieldExtensionProvider","setCustomField","fieldData","field","_ref3","_callee2","_context2","setData","Metspo","lazy","Dropdown","LocalizedDropdown","CatchAll","CustomFieldExtension","EntrySidebarExtension","AssetSidebarExtension","StackDashboardExtension","EntrySidebarExtensionMLang","BCCTA","PageNotFound","DefaultPage","GetConstructorCategory","ConstructorIngest","App","Routes","Route","path","element","Suspense","ReactDOM","createRoot","document","getElementById","render","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.fecff537.chunk.js","sourcesContent":["import React from \"react\";\n\nexport type CustomFieldExtensionContextType = {\n  customField: unknown;\n  setFieldData: (data: unknown) => void;\n  loading: boolean;\n};\n\nexport const CustomFieldExtensionContext = React.createContext<CustomFieldExtensionContextType>({\n  customField: null,\n  setFieldData: () => {},\n  loading: false,\n});\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\nconst ENV: string = process.env.NODE_ENV;\n\n/**\n * Global Error Boundary component\n * Errors are logged on to TrackJS service\n */\nexport class ErrorBoundary extends React.Component {\n  state: { hasError: boolean };\n\n  constructor(props: { children: React.ReactNode }) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: any) {\n    // You can also log the error to an error reporting service\n    if (ENV === \"development\") {\n      console.error(error);\n    }\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n\n    // @ts-ignore\n    return this.props.children;\n  }\n}\n","/**\n * AppFailed component.\n * This components will be rendered if the App fails to initialize.( ContentStack SDK)\n */\nexport const AppFailed = () => {\n  return (\n    <div className=\"app-failed-container\">\n      <div className=\"app-component-container\" role=\"alert\">\n        <div className=\"app-content\">\n          <svg className=\"app-icon\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n              fillRule=\"evenodd\"\n              d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\n              clipRule=\"evenodd\"></path>\n          </svg>\n          <h3>Something went wrong. Please try refreshing the page.</h3>\n        </div>\n        <div className=\"app-text\">If the issue continues, please reach out to us at support@contentstack.com</div>\n        <div className=\"secondary-app-container\">\n          <button type=\"button\">\n            <svg className=\"app-learn-more\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\"></path>\n              <path\n                fillRule=\"evenodd\"\n                d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\"\n                clipRule=\"evenodd\"></path>\n            </svg>\n            Learn more\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Extension from \"@contentstack/app-sdk/dist/src/extension\";\nimport { KeyValueObj } from \"../types/types\";\n\nexport type MarketplaceAppContextType = {\n  appSdk: Extension | null;\n  appConfig: KeyValueObj | null;\n};\n\nexport const MarketplaceAppContext = React.createContext<MarketplaceAppContextType>({\n  appSdk: null,\n  appConfig: null,\n});\n","import React, { useEffect, useState } from \"react\";\nimport ContentstackAppSDK from \"@contentstack/app-sdk\";\nimport Extension from \"@contentstack/app-sdk/dist/src/extension\";\nimport { KeyValueObj } from \"../types/types\";\nimport { isNull } from \"lodash\";\nimport { AppFailed } from \"../../components/AppFailed\";\nimport { MarketplaceAppContext } from \"../contexts/marketplaceContext\";\n\nconst MARKETPLACE_APP_NAME: string = process.env.REACT_APP_MARKETPLACE_APP_NAME as string;\n\ntype ProviderProps = {\n  children?: React.ReactNode;\n};\n\n/**\n * Marketplace App Provider\n * @param children: React.ReactNode\n */\nexport const MarketplaceAppProvider: React.FC<ProviderProps> = ({ children }) => {\n  const [failed, setFailed] = useState<boolean>(false);\n  const [appSdk, setAppSdk] = useState<Extension | null>(null);\n  const [appConfig, setConfig] = useState<KeyValueObj | null>(null);\n\n  // Initialize the SDK and track analytics event\n  useEffect(() => {\n    ContentstackAppSDK.init()\n      .then(async (appSdk) => {\n        setAppSdk(appSdk);\n        const appConfig = await appSdk.getConfig();\n        setConfig(appConfig);\n      })\n      .catch(() => {\n        setFailed(true);\n      });\n  }, []);\n\n  // wait until the SDK is initialized. This will ensure the values are set\n  // correctly for appSdk.\n  if (!failed && isNull(appSdk)) {\n    return <div>Loading...</div>;\n  }\n\n  if (failed) {\n    return <AppFailed />;\n  }\n\n  return <MarketplaceAppContext.Provider value={{ appSdk, appConfig }}>{children}</MarketplaceAppContext.Provider>;\n};\n","import { useAppSdk } from \"./useAppSdk\";\nimport { get, isEmpty, keys } from \"lodash\";\nimport { useMemo } from \"react\";\n\n/**\n * Returns the location name (eg: CustomField) and the location instance from the SDK\n * based on active location\n * @return {locationName, location}\n */\nexport const useAppLocation = (): { locationName: string; location: any } => {\n  const appSdk = useAppSdk();\n  const locations = useMemo(() => keys(appSdk?.location), [appSdk]);\n\n  /**\n   * memoized locationName and location instance\n   */\n  const { locationName, location } = useMemo(() => {\n    let location = null;\n    let locationName: string = \"\";\n    for (let i = 0; i <= locations.length; i++) {\n      if (!isEmpty(get(appSdk, `location.${locations[i]}`, undefined))) {\n        locationName = locations[i];\n        location = get(appSdk?.location, locationName);\n        break;\n      }\n    }\n\n    return { location, locationName };\n  }, [locations, appSdk]);\n\n  return { locationName, location };\n};\n","/**\n * useAppSdk\n * @return the appSdk instance after initialization\n */\nimport { MarketplaceAppContext, MarketplaceAppContextType } from \"../contexts/marketplaceContext\";\nimport { useContext } from \"react\";\n\n/**\n * Getter and setter for appSdk instance.\n * To be used during Sdk initialisation\n */\nexport const useAppSdk = () => {\n  const { appSdk } = useContext(MarketplaceAppContext) as MarketplaceAppContextType;\n  return appSdk;\n};\n","import React from \"react\";\n\nexport type EntrySidebarExtensionContextType = {\n  entryData: { [key: string]: any };\n  loading: boolean;\n};\n\nexport const EntrySidebarExtensionContext = React.createContext<EntrySidebarExtensionContextType>({\n  entryData: {},\n  loading: false,\n});\n","import { useEffect, useState } from \"react\";\nimport { useAppLocation } from \"../hooks/useAppLocation\";\nimport { isEmpty, isNull } from \"lodash\";\nimport { EntrySidebarExtensionContext } from \"../contexts/entrySidebarExtensionContext\";\n\nexport const EntrySidebarExtensionProvider = ({ children }: any) => {\n  const [entryData, setEntry] = useState<{ [key: string]: any }>({});\n  const [loading, setLoading] = useState<boolean>(false);\n  const { location } = useAppLocation();\n\n  useEffect(() => {\n    (async () => {\n      if (!isEmpty(entryData) || isNull(location)) return;\n      setLoading(true);\n      const entry: { [key: string]: any } = await location.entry.getData();\n      setEntry(entry);\n      setLoading(false);\n    })();\n  }, [entryData, location, setLoading, setEntry]);\n\n  return (\n    <EntrySidebarExtensionContext.Provider value={{ entryData, loading }}>\n      {children}\n    </EntrySidebarExtensionContext.Provider>\n  );\n};\n","import React from \"react\";\n\nexport type InstallationData = {\n  configuration: { [key: string]: any };\n  serverConfiguration: { [key: string]: any };\n};\n\nexport type AppConfigurationExtensionContextType = {\n  installationData: InstallationData;\n  setInstallationData: (installationData: InstallationData) => void;\n  loading: boolean;\n};\n\nexport const AppConfigurationExtensionContext = React.createContext<AppConfigurationExtensionContextType>({\n  installationData: {\n    configuration: {},\n    serverConfiguration: {},\n  },\n  setInstallationData: () => {},\n  loading: false,\n});\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useAppLocation } from \"../hooks/useAppLocation\";\nimport { isEmpty } from \"lodash\";\nimport { AppConfigurationExtensionContext, InstallationData } from \"../contexts/appConfigurationExtensionContext\";\n\nexport const AppConfigurationExtensionProvider = ({ children }: any) => {\n  const [installationData, setInstallation] = useState<InstallationData>({\n    configuration: {},\n    serverConfiguration: {},\n  });\n  const [loading, setLoading] = useState<boolean>(false);\n  const { location } = useAppLocation();\n\n  useEffect(() => {\n    if (!isEmpty(installationData)) return;\n    setLoading(true);\n    location.installation\n      .getInstallationData()\n      .then((data: InstallationData) => {\n        setInstallation(data);\n        setLoading(false);\n      })\n      .catch((err: Error) => {\n        console.error(err);\n      });\n  }, [installationData, location, setLoading, setInstallation]);\n\n  const setInstallationData = useCallback(\n    async (data: { [key: string]: any }) => {\n      setLoading(true);\n      const newInstallationData: InstallationData = {\n        configuration: { ...installationData.configuration, ...data },\n        serverConfiguration: installationData.serverConfiguration,\n      };\n      await location.installation.setInstallationData(newInstallationData);\n      setInstallation(newInstallationData);\n      setLoading(false);\n    },\n    [location, setInstallation, setLoading]\n  );\n\n  return (\n    <AppConfigurationExtensionContext.Provider value={{ installationData, setInstallationData, loading }}>\n      {children}\n    </AppConfigurationExtensionContext.Provider>\n  );\n};\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useAppLocation } from \"../hooks/useAppLocation\";\nimport { isEmpty } from \"lodash\";\nimport { CustomFieldExtensionContext } from \"../contexts/customFieldExtensionContext\";\n\nexport const CustomFieldExtensionProvider = ({ children }: any) => {\n  const [customField, setCustomField] = useState<unknown>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const { location } = useAppLocation();\n\n  useEffect(() => {\n    (async () => {\n      // check if the data was loaded earlier or not\n      if (isEmpty(customField)) {\n        setLoading(true);\n        let fieldData = await location.field.getData();\n        setCustomField(fieldData);\n        setLoading(false);\n      }\n    })();\n  }, [setLoading, setCustomField, location, customField]);\n\n  const setFieldData = useCallback(\n    async (data: unknown) => {\n      setLoading(true);\n      await location.field.setData(data);\n      setCustomField(data);\n      setLoading(false);\n    },\n    [location, setLoading, setCustomField]\n  );\n\n  return (\n    <CustomFieldExtensionContext.Provider value={{ customField, setFieldData, loading }}>\n      {children}\n    </CustomFieldExtensionContext.Provider>\n  );\n};\n","import React, { Suspense } from \"react\";\nimport { ErrorBoundary } from \"../../components/ErrorBoundary\";\nimport { MarketplaceAppProvider } from \"../../common/providers/MarketplaceAppProvider\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { EntrySidebarExtensionProvider } from \"../../common/providers/EntrySidebarExtensionProvider\";\nimport { AppConfigurationExtensionProvider } from \"../../common/providers/AppConfigurationExtensionProvider\";\nimport { CustomFieldExtensionProvider } from \"../../common/providers/CustomFieldExtensionProvider\";\n\n/**\n * All the routes are Lazy loaded.\n * This will ensure the bundle contains only the core code and respective route bundle\n * improving the page load time\n */\nconst Metspo = React.lazy(() => import(\"../CustomField/Metspo\"));\nconst Dropdown = React.lazy(() => import(\"../CustomField/Dropdown\"));\nconst LocalizedDropdown = React.lazy(() => import(\"../CustomField/LocalizedDropdown\"));\nconst CatchAll = React.lazy(() => import(\"../CustomField/CatchAll\"));\nconst CustomFieldExtension = React.lazy(() => import(\"../CustomField/CustomField\"));\nconst EntrySidebarExtension = React.lazy(() => import(\"../SidebarWidget/EntrySidebar\"));\nconst AppConfigurationExtension = React.lazy(() => import(\"../ConfigScreen/AppConfiguration\"));\nconst AssetSidebarExtension = React.lazy(() => import(\"../AssetSidebarWidget/AssetSidebar\"));\nconst StackDashboardExtension = React.lazy(() => import(\"../DashboardWidget/StackDashboard\"));\nconst EntrySidebarExtensionMLang = React.lazy(() => import(\"../SidebarWidget/EntrySidebarMLang\"));\nconst BCCTA = React.lazy(() => import(\"../CustomField/BCCTA\"));\nconst PageNotFound = React.lazy(() => import(\"../404/404\"));\nconst DefaultPage = React.lazy(() => import(\"../index\"));\nconst GetConstructorCategory = React.lazy(() => import(\"../CustomField/GetCnstrctrCat\"));\nconst ConstructorIngest = React.lazy(() => import(\"../ConfigScreen/Constructor Ingest\"))\n\nfunction App() {\n  return (\n    <ErrorBoundary>\n      <MarketplaceAppProvider>\n        <Routes>\n          <Route path=\"/\" element={<DefaultPage />} />\n          <Route\n            path=\"/metspo\"\n            element={\n              <Suspense>\n                <CustomFieldExtensionProvider>\n                  <Metspo />\n                </CustomFieldExtensionProvider>\n              </Suspense>\n            }\n          />\n          <Route\n            path=\"/dropdown\"\n            element={\n              <Suspense>\n                <CustomFieldExtensionProvider>\n                  <Dropdown />\n                </CustomFieldExtensionProvider>\n              </Suspense>\n            }\n          />\n          <Route\n            path=\"/localizeddropdown\"\n            element={\n              <Suspense>\n                <CustomFieldExtensionProvider>\n                  <LocalizedDropdown />\n                </CustomFieldExtensionProvider>\n              </Suspense>\n            }\n          />\n                    <Route\n            path=\"/bccta\"\n            element={\n              <Suspense>\n                <CustomFieldExtensionProvider>\n                  <BCCTA />\n                </CustomFieldExtensionProvider>\n              </Suspense>\n            }\n          />\n          <Route\n            path=\"/custom-field\"\n            element={\n              <Suspense>\n                <CustomFieldExtensionProvider>\n                  <CustomFieldExtension />\n                </CustomFieldExtensionProvider>\n              </Suspense>\n            }\n          />\n          <Route\n            path=\"/entry-sidebar\"\n            element={\n              <Suspense>\n                <EntrySidebarExtensionProvider>\n                  <EntrySidebarExtension />\n                </EntrySidebarExtensionProvider>\n              </Suspense>\n            }\n          />\n          <Route\n            path=\"/catchall\"\n            element={\n              <Suspense>\n                <EntrySidebarExtensionProvider>\n                  <CatchAll />\n                </EntrySidebarExtensionProvider>\n              </Suspense>\n            }\n          />\n                    <Route\n            path=\"/getcnstrctr\"\n            element={\n              <Suspense>\n                <EntrySidebarExtensionProvider>\n                  <GetConstructorCategory />\n                </EntrySidebarExtensionProvider>\n              </Suspense>\n            }\n          />\n          <Route\n            path=\"/sidebar-mlang\"\n            element={\n              <Suspense>\n                <EntrySidebarExtensionProvider>\n                  <EntrySidebarExtensionMLang />\n                </EntrySidebarExtensionProvider>\n              </Suspense>\n            }\n          />\n          {/* <Route\n            path=\"/app-configuration\"\n            element={\n              <Suspense>\n                <AppConfigurationExtensionProvider>\n                  <AppConfigurationExtension />\n                </AppConfigurationExtensionProvider>\n              </Suspense>\n            }\n          /> */}\n                    <Route\n            path=\"/constructor-ingest\"\n            element={\n              <Suspense>\n                <AppConfigurationExtensionProvider>\n                  <ConstructorIngest />\n                </AppConfigurationExtensionProvider>\n              </Suspense>\n            }\n          />\n          <Route\n            path=\"/asset-sidebar\"\n            element={\n              <Suspense>\n                <AssetSidebarExtension />\n              </Suspense>\n            }\n          />\n          <Route\n            path=\"/stack-dashboard\"\n            element={\n              <Suspense>\n                <StackDashboardExtension />\n              </Suspense>\n            }\n          />\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n      </MarketplaceAppProvider>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./containers/App/App\";\nimport \"./index.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\") as HTMLElement);\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}