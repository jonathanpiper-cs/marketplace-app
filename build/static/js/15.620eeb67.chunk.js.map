{"version":3,"sources":["containers/CustomField/GetCnstrctrCat.tsx","../node_modules/systemjs/dist lazy groupOptions: {} namespace object"],"names":["ConstructorCats","_useState","useState","_useState2","_slicedToArray","groups","setGroups","_useState3","_useState4","customField","setCustomField","_useState5","_useState6","config","setConfig","useEffect","ContentstackAppSDK","init","then","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","appSDK","customFieldObject","fieldData","wrap","_context","prev","next","t0","getConfig","t1","sent","Object","keys","length","console","log","location","CustomField","field","getData","fieldConfig","isEmpty","constructorGroups","stop","_x","apply","arguments","updateCheckbox","e","target","checked","indexOf","name","concat","_toConsumableArray","filter","g","setData","_jsx","className","children","_jsxs","map","cat","key","Checkbox","isLabelFullWidth","label","onChange","Button","onClick","webpackEmptyAsyncContext","req","Promise","resolve","Error","code","module","exports","id"],"mappings":"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","file":"static/js/15.620eeb67.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ContentstackAppSDK from \"@contentstack/app-sdk\";\nimport { useCustomField } from \"../../common/hooks/useCustomField\";\nimport { Icon, Button, Select, Checkbox, Accordion } from \"@contentstack/venus-components\";\nimport \"@contentstack/venus-components/build/main.css\";\nimport { isEmpty } from \"lodash\";\n\nconst ConstructorCats = () => {\n  const [groups, setGroups] = useState<any>([]);\n  const [customField, setCustomField] = useState<any>();\n  const [config, setConfig] = useState<any>();\n\n  useEffect(() => {\n    ContentstackAppSDK.init().then(async (appSDK: any) => {\n      setConfig(await appSDK.getConfig());\n      if (config && Object.keys(config).length === 0) {\n        console.log(`No configuration available`);\n      }\n      const customFieldObject = await appSDK.location.CustomField;\n      setCustomField(customFieldObject);\n      var fieldData = await customFieldObject.field.getData();\n      const fieldConfig = await customFieldObject.fieldConfig;\n      if (!isEmpty(fieldData) && fieldData !== null) {\n        if (fieldData.constructorGroups) {\n          setGroups(fieldData.constructorGroups);\n        }\n      }\n    });\n  }, []);\n\n  const updateCheckbox = (e: any) => {\n    if (e.target.checked && groups.indexOf(e.target.name) === -1) {\n      setGroups([...groups, e.target.name]);\n    } else {\n      setGroups(groups.filter((g: string) => g !== e.target.name));\n    }\n  };\n\n  useEffect(() => {\n    customField?.field\n    .setData({\n      constructorGroups: groups,\n    })\n    .then(console.log(`Groups selected: ${groups.length > 0 ? groups : 'none'}`));\n  }, [groups])\n\n  const displayData = () => {\n    console.log(groups);\n  };\n\n  return (\n    <div className=\"custom-field\">\n      <div className=\"custom-field-container\">\n        {config ? (\n          <div className=\"constructor-cats\">\n            <h6>Select at least one category below:</h6>\n            <ul>\n              {config.constructorGroups.map((cat: string, key: any) => {\n                return (\n                  <li key={key}>\n                    <Checkbox isLabelFullWidth label={cat} name={cat} onChange={updateCheckbox} checked={groups?.indexOf(cat) !== -1} />\n                  </li>\n                );\n              })}\n            </ul>\n            <Button onClick={displayData}>Print to console</Button>\n          </div>\n        ) : (\n          <div><p>No configuration found.</p></div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ConstructorCats;\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 97;"],"sourceRoot":""}