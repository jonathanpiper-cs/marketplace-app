{"version":3,"sources":["containers/CustomField/Metspo.tsx","common/hooks/useCustomField.tsx","../node_modules/systemjs/dist lazy groupOptions: {} namespace object"],"names":["Metspo","_useState","useState","_useState2","_slicedToArray","arrBadIDs","setBadIDs","_useCustomField","useCustomField","setFieldData","customFieldPointer","_useState3","_useState4","meta","setMeta","_useState5","_useState6","noImage","setNoImage","_useState7","_useState8","fetchingImage","setFetchingImage","_useState9","primaryImageSmall","title","objectDate","artistDisplayName","medium","_useState10","metObject","setMetObject","_useState11","_useState12","imgSrc","setImgSrc","_useState13","_useState14","getCustomField","setCustomField","getMetData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","query","response","metObjData","_metObjectJSON","metObjID","metObjectResponse","metObjectJSON","wrap","_context","prev","next","get","then","value","fetch","concat","sent","json","objectIDs","length","abrupt","Math","floor","random","indexOf","console","log","t0","push","set","splice","stop","_x","apply","arguments","getMetImage","_ref2","_callee2","_context2","useEffect","entry","_data","frame","updateHeight","saveImage","_ref3","_callee3","_context3","ContentstackAppSDK","init","_ref4","_callee4","appSDK","_customField$frame","_customField$frame$en","customField","appMeta","fieldData","_context4","location","CustomField","store","field","getData","enableAutoResizing","call","enableResizing","isEmpty","_x2","_jsxs","className","children","_jsx","Button","onClick","disabled","Paragraph","tagName","text","src","Heading","useContext","CustomFieldExtensionContext","loading","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"static/js/11.dcca6299.chunk.js","sourcesContent":["import Icon from \"../../assets/customfield.svg\";\nimport React, { useEffect, useState } from 'react';\nimport localeTexts from \"../../common/locales/en-us/index\";\nimport parse from \"html-react-parser\";\nimport ContentstackAppSDK from \"@contentstack/app-sdk\";\nimport { useCustomField } from \"../../common/hooks/useCustomField\";\nimport { Button, Heading, Paragraph } from \"@contentstack/venus-components\";\nimport '@contentstack/venus-components/build/main.css';\nimport { isEmpty } from \"lodash\";\n\ninterface MetObject {\n\tprimaryImageSmall: string;\n\ttitle: string;\n\tobjectDate: string;\n\tartistDisplayName: string;\n\tmedium: string;\n}\n\ninterface CustomFieldType {\n\t[key: string]: any;\n}\n\nconst Metspo = () => {\n\tconst [arrBadIDs, setBadIDs]: any = useState([]);\n\tconst { customFieldPointer, setFieldData }: any = useCustomField();\n\tconst [meta, setMeta]: any = useState({});\n\tconst [noImage, setNoImage] = useState(false);\n\tconst [fetchingImage, setFetchingImage] = useState(false);\n\tconst [metObject, setMetObject] = useState<MetObject>({\n\t\tprimaryImageSmall: '',\n\t\ttitle: '',\n\t\tobjectDate: '',\n\t\tartistDisplayName: '',\n\t\tmedium: '',\n\t});\n\tconst [imgSrc, setImgSrc] = useState('');\n\tconst [getCustomField, setCustomField] = useState<CustomFieldType>({});\n\n\tconst getMetData = async (query: string) => {\n\t\tmeta.get('badObjIDs').then((value: any) => (setBadIDs(value)));\n\t\tconst response = await fetch(`https://collectionapi.metmuseum.org/public/collection/v1/search?q=${query}`)\n\t\tconst metObjData: any = await response.json();\n\t\t// console.log(metObjData)\n\t\tif (metObjData.objectIDs === null || metObjData.length === 0) {\n\t\t\tsetNoImage(true);\n\t\t\tsetFetchingImage(false);\n\t\t\treturn;\n\t\t}\n\t\twhile (fetchingImage) {\n\t\t\tconst metObjID: number = metObjData.objectIDs[Math.floor(Math.random() * metObjData.objectIDs.length)];\n\t\t\tlet metObjectResponse: any;\n\t\t\tlet metObjectJSON: MetObject = {\n\t\t\t\tprimaryImageSmall: '',\n\t\t\t\ttitle: '',\n\t\t\t\tobjectDate: '',\n\t\t\t\tartistDisplayName: '',\n\t\t\t\tmedium: '',\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tif (arrBadIDs.indexOf(metObjID) === -1) {\n\t\t\t\t\tmetObjectResponse = await fetch(`https://collectionapi.metmuseum.org/public/collection/v1/objects/${metObjID}`);\n\t\t\t\t\tmetObjectJSON = await metObjectResponse.json();\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(`We already know that object ${metObjID} doesn't have an associated image.`)\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t\tif (metObjectJSON?.primaryImageSmall && (metObjectJSON.primaryImageSmall !== '')) {\n\t\t\t\tconsole.log('got an image!');\n\t\t\t\tsetMetObject(metObjectJSON);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tarrBadIDs.push(metObjID);\n\t\t\tsetBadIDs(arrBadIDs);\n\t\t\tmeta.set('badObjIDs', arrBadIDs);\n\t\t\tmeta.get('badObjIDs').then((value: any) => console.log('IDs without images: ' + value));\n\t\t\tmetObjData.objectIDs.splice(metObjData.objectIDs.indexOf(metObjID), 1);\n\t\t\t// console.log('rejected');\n\t\t\tif (metObjData.objectIDs.length == 0) {\n\t\t\t\tsetNoImage(true);\n\t\t\t}\n\t\t\t// console.log(metObjData.objectIDs);\n\t\t}\n\t}\n\n\tconst getMetImage = async () => {\n\t\tsetFetchingImage(true);\n\t\tsetNoImage(false);\n\t\tsetMetObject({\n\t\t\tprimaryImageSmall: '',\n\t\t\ttitle: '',\n\t\t\tobjectDate: '',\n\t\t\tartistDisplayName: '',\n\t\t\tmedium: ''\n\t\t});\n\t\tsetImgSrc('');\n\t}\n\n\tuseEffect(() => {\n\t\tfetchingImage &&\n\t\t\tgetMetData(getCustomField.entry._data.title);\n\t}, [fetchingImage])\n\n\tuseEffect(() => {\n\t\tif (metObject.primaryImageSmall !== '') {\n\t\t\tsetImgSrc(metObject.primaryImageSmall);\n\t\t\tsetFetchingImage(false);\n\t\t\t// console.log(getCustomField.frame)\n\t\t\tgetCustomField.frame.updateHeight()\n\t\t}\n\t}, [metObject])\n\n\tconst saveImage = async () => {\n\t\tsetFieldData(metObject);\n\t}\n\n\tuseEffect(() => {\n\t\tContentstackAppSDK.init().then(async (appSDK: any) => {\n\t\t\tconst customField = await appSDK.location.CustomField;\n\t\t\tconst appMeta = await appSDK.store;\n\t\t\tsetMeta(appMeta);\n\t\t\tvar fieldData = await customField.field.getData()\n\t\t\tsetCustomField(customField);\n\t\t\tcustomField.frame?.enableAutoResizing?.();\n\t\t\tcustomField.frame.enableResizing();\n\t\t\tcustomField.frame.updateHeight(400);\n\t\t\tif (!isEmpty(fieldData) && fieldData !== null) {\n\t\t\t\tsetMetObject(fieldData);\n\t\t\t}\n\t\t})\n\t}, []);\n\n\treturn (\n\t\t<div className=\"met-inspo-container\">\n\t\t\t<div className=\"met-inspo-header\">\n\t\t\t\t<Button onClick={getMetImage} disabled={fetchingImage}>Get inspired by an image from the Met</Button>\n\t\t\t\t<Button onClick={saveImage}>Save image to the Entry</Button>\n\t\t\t</div>\n\n\t\t\t{noImage ? (\n\t\t\t\t<div className=\"met-no-image\">\n\t\t\t\t\t<Paragraph tagName=\"p\" text={`Hmm, couldn't find an object based on the Entry title (\"${getCustomField.entry._data.title}\").`} />\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className=\"met-inspo-body\">\n\t\t\t\t\t<div className=\"met-inspo-col-left\">\n\t\t\t\t\t\t{fetchingImage ? (\n\t\t\t\t\t\t\t<p>Fetching image...</p>\n\t\t\t\t\t\t) : (metObject.primaryImageSmall !== '') ? (\n\t\t\t\t\t\t\t<img className=\"met-inspo-image\" src={imgSrc} />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"met-inspo-col-right\">\n\t\t\t\t\t\t<Heading tagName=\"h6\" text={metObject.title} />\n\t\t\t\t\t\t<Paragraph tagName=\"p\" text={metObject.artistDisplayName} />\n\t\t\t\t\t\t<Paragraph tagName=\"p\" text={metObject.objectDate} />\n\t\t\t\t\t\t<Paragraph tagName=\"p\" text={metObject.medium} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Metspo;\n","import { useContext } from \"react\";\nimport { CustomFieldExtensionContext, CustomFieldExtensionContextType } from \"../contexts/customFieldExtensionContext\";\n\n/**\n * Getter and setter hook for custom field data\n * @returns an object { customField, setFieldData, loading }\n *\n * const { customField, setFieldData, loading } = useCustomField();\n */\nexport const useCustomField = () => {\n  const { customField, setFieldData, loading } = useContext(\n    CustomFieldExtensionContext\n  ) as CustomFieldExtensionContextType;\n\n  return { customField, setFieldData, loading };\n};\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 97;"],"sourceRoot":""}