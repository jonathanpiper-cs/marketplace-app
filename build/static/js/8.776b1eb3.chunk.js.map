{"version":3,"sources":["containers/CustomField/CatchAll.tsx","../node_modules/systemjs/dist lazy groupOptions: {} namespace object"],"names":["require","removeAddition","CatchAll","_useState","useState","_useState2","_slicedToArray","endpoint","setEndpoint","_useState3","_useState4","headers","setHeaders","_useState5","_useState6","catchallData","setCatchallData","_useState7","_useState8","setFetching","_useState9","_useState10","customField","setCustomField","_useState11","_useState12","unsaved","setUnsaved","fetchEndpoint","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","json","wrap","_context","prev","next","fetch","sent","console","log","stop","apply","arguments","useEffect","ContentstackAppSDK","init","then","_ref2","_callee2","appSDK","customFieldObject","fieldData","fieldConfig","_context2","location","CustomField","field","getData","frame","enableResizing","updateHeight","isEmpty","_x","saveDataToField","_ref3","_callee3","_context3","setData","RecursiveRender","obj","level","length","undefined","path","Array","isArray","find","x","_jsx","children","Object","keys","map","key","index","pop","_jsxs","String","id","_toConsumableArray","concat","substring","_Fragment","RenderObj","props","className","Button","buttonType","icon","onClick","disabled","size","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","module","exports"],"mappings":"iPAUY,IADAA,EAAQ,KACR,CAAQ,CAAEC,gBAAgB,IACVD,EAAQ,KAyPrBE,UAvPE,WAGb,IAAAC,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,EAA8BL,mBAAS,CAAC,GAAEM,EAAAJ,YAAAG,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,EAAwCT,qBAAeU,EAAAR,YAAAO,EAAA,GAAhDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAEpCG,EAAgCb,oBAAS,GAAMc,EAAAZ,YAAAW,EAAA,GAA9BE,GAAFD,EAAA,GAAaA,EAAA,IAC5BE,EAAsChB,qBAAeiB,EAAAf,YAAAc,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAElCG,EAA8BpB,oBAAS,GAAMqB,EAAAnB,YAAAkB,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAEpBG,EAAa,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAED,OADjBpB,GAAY,GACZQ,GAAW,GAAMU,EAAAE,KAAA,EACMC,MAAMjC,EAAU,CAAEI,YAAW,KAAD,EAArC,OAARuB,EAAQG,EAAAI,KAAAJ,EAAAE,KAAA,EACKL,EAASC,OAAO,KAAD,EAA5BA,EAAIE,EAAAI,KACVC,QAAQC,IAAIR,GACZnB,EAAgBmB,GAAM,yBAAAE,EAAAO,OAAA,GAAAX,EAAA,KACzB,kBAPkB,OAAAJ,EAAAgB,MAAA,KAAAC,UAAA,KASnBC,qBAAU,WACNC,IAAmBC,OAAOC,KAAI,eAAAC,EAAArB,YAAAC,cAAAC,MAAC,SAAAoB,EAAOC,GAAW,IAAAC,EAAAC,EAAAC,EAAA,OAAAzB,cAAAK,MAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OACzB,OAApBG,QAAQC,IAAIU,GAAQI,EAAAlB,KAAA,EACYc,EAAOK,SAASC,YAAY,KAAD,EACzB,OAD5BL,EAAiBG,EAAAhB,KACvBlB,EAAe+B,GAAmBG,EAAAlB,KAAA,EACZe,EAAkBM,MAAMC,UAAS,OAA1C,OAATN,EAASE,EAAAhB,KAAAgB,EAAAlB,KAAA,GACae,EAAkBE,YAAY,KAAD,GAAjDA,EAAWC,EAAAhB,KACjBjC,EAAuB,OAAXgD,QAAW,IAAXA,OAAW,EAAXA,EAAajD,UACzBK,EAAsB,OAAX4C,QAAW,IAAXA,OAAW,EAAXA,EAAa7C,SACxB2C,EAAkBQ,MAAMC,iBACxBT,EAAkBQ,MAAME,aAAa,KAChCC,kBAAQV,IAA4B,OAAdA,GAKnBA,EAAUxC,cACVC,EAAgBuC,EAAUxC,cAEjC,yBAAA0C,EAAAb,OAAA,GAAAQ,EAAA,KACJ,gBAAAc,GAAA,OAAAf,EAAAN,MAAA,KAAAC,UAAA,EAnB6B,GAoBlC,GAAG,IAiBH,IAAMqB,EAAe,eAAAC,EAAAtC,YAAAC,cAAAC,MAAG,SAAAqC,IAAA,OAAAtC,cAAAK,MAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,OACpBjB,EAAYsC,MAAMW,QAAQ,CAEtBxD,aAAcA,IAElBI,GAAY,GACZQ,GAAW,GAAO,wBAAA2C,EAAA1B,OAAA,GAAAyB,EAAA,KACrB,kBAPoB,OAAAD,EAAAvB,MAAA,KAAAC,UAAA,KASf0B,EAAkB,SAAlBA,EAAmBC,GAAwD,IAA9CC,EAAa5B,UAAA6B,OAAA,QAAAC,IAAA9B,UAAA,GAAAA,UAAA,GAAG,EAAG+B,EAAW/B,UAAA6B,OAAA,QAAAC,IAAA9B,UAAA,GAAAA,UAAA,GAAG,GAIhE,OAHIgC,MAAMC,QAAQN,KACdA,EAAMA,EAAIO,MAAK,SAAAC,GAAC,YAAUL,IAANK,CAAe,KAGnB,kBAARR,EACJS,cAAA,MAAAC,SACKC,OAAOC,KAAKZ,GAAKa,KAAI,SAACC,EAAKC,GACxB,KAAOX,EAAKF,OAASD,GACjBG,EAAKY,MAGT,OADAZ,EAAKH,GAASa,EAEVG,eAAA,MAAI,WAAUC,OAAOd,GAAMM,SAAA,CACvBD,cAAA,KAAGU,GAAID,OAAME,YAAKhB,IAAOM,SAAA,GAAAW,OAAKP,EAAG,KAAAO,OAAwB,kBAAbrB,EAAIc,GAAoB,IAAMI,OAAOlB,EAAIc,IAAMQ,UAAU,EAAG,IAAOJ,OAAOlB,EAAIc,GAAKZ,OAAS,GAAK,MAAQ,IAAO,IAAM,MACjKH,EAAgBC,EAAIc,GAAMb,EAAQ,EAAGG,KAFTU,EAKzC,MAGJL,cAAAc,WAAA,GAGZ,EA2DMC,EAAY,SAACC,GACf,OACIR,eAAA,OAAAP,SAAA,CACKpE,EAAgBmE,cAAA,KAAAC,SAAG,2BAA+B,GAClDX,EAAgB0B,EAAMzB,OAGnC,EAoCA,OACIS,cAAA,OAAKiB,UAAU,eAAchB,SACzBO,eAAA,OAAKS,UAAU,yBAAwBhB,SAAA,CACnCO,eAAA,OAAKS,UAAU,kBAAiBhB,SAAA,CAM5BD,cAAA,MAAAC,SAAI,2BACJO,eAAA,OAAKS,UAAU,kBAAiBhB,SAAA,CAC5BD,cAAA,KAAAC,SAAI5E,IACJ2E,cAACkB,IAAM,CAACC,WAAW,YAAYC,KAAK,SAASC,QAAS3E,EAAcuD,SAAC,eAazEO,eAAA,OAAKS,UAAU,gBAAehB,SAAA,CAC1BD,cAAA,OAAKiB,UAAU,mBAAkBhB,SAC7BD,cAACe,EAAS,CAACxB,IAAK1D,MAEpBmE,cAAA,OAAKiB,UAAU,qBAAoBhB,SAC/BD,cAACkB,IAAM,CAACI,UAAW9E,EAAS4E,KAAM,YAAaG,KAAM,QAASF,QAASpC,EAAgBgB,SAAC,sCAqBpH,C,mQClQA,SAASuB,EAAyBC,GAGjC,OAAOC,QAAQC,UAAU3D,MAAK,WAC7B,IAAI4D,EAAI,IAAIC,MAAM,uBAAyBJ,EAAM,KAEjD,MADAG,EAAEE,KAAO,mBACHF,CACP,GACD,CACAJ,EAAyBrB,KAAO,WAAa,MAAO,EAAI,EACxDqB,EAAyBG,QAAUH,EACnCO,EAAOC,QAAUR,EACjBA,EAAyBd,GAAK,E","file":"static/js/8.776b1eb3.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport localeTexts from \"../../common/locales/en-us/index\";\nimport parse from \"html-react-parser\";\nimport ContentstackAppSDK from \"@contentstack/app-sdk\";\nimport { useCustomField } from \"../../common/hooks/useCustomField\";\nimport { Icon, Button, Select, Checkbox, Accordion } from \"@contentstack/venus-components\";\nimport '@contentstack/venus-components/build/main.css';\nimport { isEmpty } from \"lodash\";\n\nconst Ajv = require('ajv');\nconst ajv = new Ajv({ removeAddition: true });\nconst jsonSchemaGenerator = require('json-schema-generator');\n\nconst CatchAll = () => {\n\n    // const { customField, setFieldData }: any = useCustomField();\n    const [endpoint, setEndpoint] = useState('');\n    const [headers, setHeaders] = useState({});\n    const [catchallData, setCatchallData] = useState<any>();\n    // const [catchallSchema, setCatchallSchema] = useState<any>({});\n    const [fetching, setFetching] = useState(false);\n    const [customField, setCustomField] = useState<any>();\n    // const [schemaSavedToEntry, setSchemaSavedToEntry] = useState(false);\n    const [unsaved, setUnsaved] = useState(false);\n\n    const fetchEndpoint = async () => {\n        setFetching(true);\n        setUnsaved(true);\n        const response = await fetch(endpoint, { headers });\n        const json = await response.json();\n        console.log(json);\n        setCatchallData(json);\n    }\n\n    useEffect(() => {\n        ContentstackAppSDK.init().then(async (appSDK: any) => {\n            console.log(appSDK);\n            const customFieldObject = await appSDK.location.CustomField;\n            setCustomField(customFieldObject);\n            var fieldData = await customFieldObject.field.getData()\n            const fieldConfig = await customFieldObject.fieldConfig;\n            setEndpoint(fieldConfig?.endpoint);\n            setHeaders(fieldConfig?.headers);\n            customFieldObject.frame.enableResizing();\n            customFieldObject.frame.updateHeight(800);\n            if (!isEmpty(fieldData) && fieldData !== null) {\n                // if (fieldData.catchallSchema) {\n                //     setSchemaSavedToEntry(true);\n                //     setCatchallSchema(fieldData.catchallSchema);\n                // }\n                if (fieldData.catchallData) {\n                    setCatchallData(fieldData.catchallData);\n                }\n            }\n        })\n    }, []);\n\n    // const saveSchema = async () => {\n    //     const jsonSchema = jsonSchemaGenerator(catchallData)\n    //     delete jsonSchema.$schema;\n    //     setCatchallSchema(jsonSchema);\n    // }\n\n    // const saveSchemaToField = async () => {\n    //     customField.field.setData({\n    //         catchallSchema: catchallSchema,\n    //         catchallData: catchallData\n    //     })\n    //     setFetching(false);\n    //     setSchemaSavedToEntry(true);\n    // }\n\n    const saveDataToField = async () => {\n        customField.field.setData({\n            // catchallSchema: catchallSchema,\n            catchallData: catchallData\n        })\n        setFetching(false);\n        setUnsaved(false);\n    }\n\n    const RecursiveRender = (obj: any, level: number = 0, path: any[] = []): any => {\n        if (Array.isArray(obj)) {\n            obj = obj.find(x => x !== undefined);\n        }\n        return (\n            (typeof obj === 'object') ? (\n                <ul>\n                    {Object.keys(obj).map((key, index) => {\n                        while (path.length > level) {\n                            path.pop();\n                        }\n                        path[level] = key;\n                        return (\n                            <li data-key={String(path)} key={key}>\n                                <p id={String([...path])}>{`${key} ${typeof obj[key] !== 'object' ? '(' + String(obj[key]).substring(0, 60) + (String(obj[key].length > 60 ? '...' : '')) + ')' : ''}`}</p>\n                                {RecursiveRender(obj[key], level + 1, path)}\n                            </li>\n                        )\n                    })}\n                </ul>\n            ) : (\n                <></>\n            )\n        )\n    }\n\n    // const RecursiveRenderSchema = (obj: any, level: number = 0): any => {\n    //     return (\n    //         <ul>\n    //             {typeof obj === 'object' ? (\n    //                 Object.keys(obj).map((key, index) => {\n    //                     console.log(obj[key])\n    //                     return (\n    //                         <li key={key}>{`${key} (${obj[key].type})`}\n    //                             {\n    //                                 obj[key].type === 'array' ? (RecursiveRenderSchema(obj[key].items.properties, level + 1)) :\n    //                                     (obj[key].type === 'object' ? (RecursiveRenderSchema(obj[key].properties, level + 1)) : '')\n    //                             }\n    //                         </li>\n    //                     )\n    //                 })\n    //             ) : ('')}\n    //         </ul>\n    //     )\n    // }\n\n    // const RecursiveRenderThroughSchema = (obj: any, level: number = 0, arrayName: string = ''): any => {\n    //     return (\n    //         (typeof obj === 'object') ? (\n    //             Object.keys(obj).map((key, index) => {\n    //                 if (!Number(key)) {\n    //                     if (typeof obj[key] === 'object') {\n    //                         return (\n    //                             <Accordion\n    //                                 renderExpanded={index === 0}\n    //                                 title={Array.isArray(obj) ? (`${arrayName} entry #${index + 1}`) : (key)}>\n    //                                 <p>{Array.isArray(obj) ? ('') : (\n    //                                     typeof obj[key] === 'object' ? ('')\n    //                                         : (\n    //                                             key + ': ' + obj[key]\n    //                                         )\n    //                                 )}</p>\n    //                                 {RecursiveRenderThroughSchema(obj[key], level + 1, key)}\n    //                             </Accordion>\n    //                         )\n    //                     } else {\n    //                         return (\n    //                             <div>\n    //                                 <p>{key}: {obj[key]}</p>\n    //                                 {RecursiveRenderThroughSchema(obj[key], level + 1)}\n    //                             </div>\n    //                         )\n    //                     }\n    //                 } else {\n    //                     { RecursiveRenderThroughSchema(obj[key], level + 1) }\n    //                 }\n    //             })\n    //         ) : (\n    //             <></>\n    //         )\n    //     )\n    // }\n\n    const RenderObj = (props: any) => {\n        return (\n            <div>\n                {catchallData ? (<p>The endpoint returned:</p>) : ('')}\n                {RecursiveRender(props.obj)}\n            </div>\n        )\n    }\n\n    // const RenderSchema = (props: any) => {\n    //     return (\n    //         <div>\n    //             {catchallData ? (<p>The returned data can be defined by this schema:</p>) : ('')}\n    //             {RecursiveRenderSchema(props.obj)}\n    //         </div>\n    //     )\n    // }\n\n    // const RenderBySchema = (props: any) => {\n    //     const data = props.obj;\n    //     let valid;\n    //     if (catchallSchema) {\n    //         const validate = ajv.compile(catchallSchema);\n    //         valid = validate(data);\n    //         if (!valid) {\n    //             console.log(validate.errors)\n    //         } else {\n    //             setCatchallData(data);\n    //         }\n    //     }\n    //     return (\n    //         <div>\n    //             {!valid ? (\n    //                 <p>The data fetched from the endpoint didn't conform to the defined schema.</p>\n    //             ) : (catchallData ? (\n    //                 <h6>Fetched data:</h6>\n    //             ) : (<div />)\n    //             )}\n    //             {RecursiveRenderThroughSchema(props.obj)}\n    //         </div >\n    //     )\n    // }\n\n    return (\n        <div className=\"custom-field\">\n            <div className=\"custom-field-container\">\n                <div className=\"catchall-header\">\n                    {/* {schemaSavedToEntry ? (\n                        <div>\n                            <p>A schema has already been saved to the custom field.</p>\n                        </div>\n                    ) : (<div />)} */}\n                    <h6>API Catchall Endpoint:</h6>\n                    <div className=\"catchall-action\">\n                        <p>{endpoint}</p>\n                        <Button buttonType=\"secondary\" icon='Reload' onClick={fetchEndpoint}>Load</Button>\n                    </div>\n                </div>\n                {/* {schemaSavedToEntry ? (\n                    <div className=\"catchall-body\">\n                        <div className=\"catchall-rendered\">\n                            <RenderBySchema obj={catchallData} />\n                        </div>\n                        <div className=\"catchall-bigbutton\">\n                            <Button disabled={!unsaved} icon={'SaveWhite'} size={'large'} onClick={saveDataToField}>Save this data to field?</Button>\n                        </div>\n                    </div>\n                ) : ( */}\n                    <div className=\"catchall-body\">\n                        <div className=\"catchall-entries\">\n                            <RenderObj obj={catchallData} />\n                        </div>\n                        <div className=\"catchall-bigbutton\">\n                            <Button disabled={!unsaved} icon={'SaveWhite'} size={'large'} onClick={saveDataToField}>Save this data to field?</Button>\n                        </div>\n                        {/* <div className=\"catchall-savebutton\">\n                            {fetching ? (\n                                <Button size=\"small\" buttonType=\"secondary\" onClick={saveSchema}>Create schema?</Button>\n                            ) : (<div />)}\n                        </div>\n                        {(Object.keys(catchallSchema).length > 0) ? (\n                            <div className=\"catchall-schema\">\n                                <RenderSchema obj={catchallSchema?.items?.properties} />\n                            </div>\n                        ) : (<div />)}\n                        {((Object.keys(catchallSchema).length > 0) && fetching) ? (\n                            <div className=\"catchall-bigbutton\">\n                                <Button icon={'SaveWhite'} size={'large'} onClick={saveSchemaToField}>Save this schema to field?</Button>\n                            </div>) : (<div />)} */}\n                    </div>\n                {/* )} */}\n            </div>\n        </div >\n    );\n};\n\nexport default CatchAll;\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 97;"],"sourceRoot":""}